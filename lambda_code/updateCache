const AWS = require('aws-sdk');

AWS.config.update({
  region: 'eu-west-1',
  endpoint: 'dynamodb.eu-west-1.amazonaws.com',
  accessKeyId: '##REPLACE_WITH_ACCESS_KEY##',
  secretAccessKey: '##REPLACE_WITH_SECRET_KEY##'
});

const docClient = new AWS.DynamoDB.DocumentClient({region: 'eu-west-1'});

exports.handler = function(event, context, callback){
  const params = {
    TableName: 'cmcCache',
    ProjectionExpression: "tickerId, tickerName, tickerSymbol, cmcCacheData"
  };
  const scanObjectPromise = docClient.scan(params).promise();
  scanObjectPromise.then((data) => {
    let list=data.Items;
    list.sort((a, b) => (a.tickerId > b.tickerId) ? 1 : -1);
    data.Items[0].cmcCacheData.quote.USD.price=(data.Items[0].cmcCacheData.quote.USD.price)*(1-(-0.00625+(Math.random()/100)*1.25));
    let newparams = {
      TableName:'cmcCache',
      Key:{ 'tickerId': parseInt(data.Items[0].tickerId, 10) },
      UpdateExpression: 'set cmcCacheData = :cmcCacheData',
      ExpressionAttributeValues:{ ':cmcCacheData':data.Items[0].cmcCacheData },
      ReturnValues:'UPDATED_NEW'
    };
    docClient.update(newparams, function(err, data) {
      if (err) {
        console.log(err);
      } else {
        const response = {
          statusCode: 200,
          headers: {"Access-Control-Allow-Origin": "*" }
        };
        return callback("456");
      }
    });
  }).catch((err) => {
    return callback(err);
  });
  const response = {
    statusCode: 200,
    headers: {"Access-Control-Allow-Origin": "*" }
  };
  return callback(null, response);
}
